[5:11 PM]4회차_한선진: https://icons.getbootstrap.com/icons/star-fill/
Star fill
Official open source SVG icon library for Bootstrap
Image
[5:11 PM]4회차_한선진: color: rgb(225, 134, 131);


FE_05
float
flex box
요소 간 공간 배열 정렬

## Selectors

li em {
  color: rebeccapurple;
}
This selector will select any <em> element that is inside (a descendant of) an <li>.

h1 + p {
  font-size: 200%;
}
place a + (an adjacent sibling combinator) between the selectors.
styling a paragraph when it comes directly after a heading at the same hierarchy level in the HTML.

/* selects any <span> that is inside a <p>, which is inside an <article>  */
article p span {
}

/* selects any <p> that comes directly after a <ul>, which comes directly after an <h1>  */
h1 + ul + p {
}

## style things based on their state

a:link {
  color: pink;
}
a:visited {
  color: green;
}
a:hover {
  text-decoration: none;
}


body h1 + p .special {
  color: yellow;
  background-color: black;
  padding: 5px;
}
This will style any element with a class of special, which is inside a <p>, which comes just after an <h1>, which is inside a <body>. 


## The calc() function
An example would be the calc() function, which can do simple math within CSS:

.box {
  padding: 10px;
  width: calc(90% - 30px);
  background-color: rebeccapurple;
  color: white;
}

## Transform functions

.box {
  margin: 30px;
  width: 100px;
  height: 100px;
  background-color: rebeccapurple;
  transform: rotate(0.8turn);
}

## shorthand

/* 
  top, right, bottom, left
  top/bottom, left/right */
  
padding: 10px 15px 15px 5px;

This one line:

background: red url(bg-graphic.png) 10px 10px repeat-x fixed;
Copy to Clipboard
is equivalent to these five lines:

background-color: red;
background-image: url(bg-graphic.png);
background-position: 10px 10px;
background-repeat: repeat-x;
background-attachment: fixed;


## Normal Flow
- 당신이 요소의 레이아웃을 변경하지 않을 시 웹페이지 요소가 자기 자신을 배치하는 방법
- 우선 개별 요소인 상자의 배치는 자신의 내용물을 채택하고, 그 주변에 패딩을 더하고, 테두리와 여백을 더하는 식으로 이뤄집니다. 
- 기본값으로 블록 수준 요소의 내용물은 자기 부모 요소의 너비 100%와 자체 내용물의 최대 높이가 됩니다. 인라인 요소는 자체 내용물의 최대 높이를 취하는 동시에 최대 너비를 취합니다. 
- 인라인 요소의 크기를 제어하려면 그것을 display: block; 속성값이나 양쪽의 성격이 혼합된 display: inline-block;을 가지고 블록 수준 요소처럼 행동하도록 설정할 필요가 있습니다.
- 각 블록 요소는 마지막 요소 아래 새 줄에 나타나며, 각 요소에 주어진 margin에 의해 구분됩니다.
- 인라인 요소는 다르게 동작합니다. 새로운 줄에 나타나는 대신, 다른 요소와 같은 라인에 차례로 자리 잡습니다. 다만 인접(혹은 접힌) 텍스트 콘텐츠는 해당 부모의 블록 수준 요소의 너비 내에서 자신이 자리를 잡을 수 있는 공간이 있는 경우가 해당합니다. 충분한 공간이 없을 경우 overflow되는 텍스트 또는 요소는 새로운 줄에 나타납니다.
- 두 개의 인접 요소가 모두 자체 여백이 지정되어 있다면 두 여백은 접촉하고 그중 큰 여백만 남게 되며, 작은 여백은 사라집니다. (margin collapsing)

## Flex Flow
주축 : justify
교차축: align